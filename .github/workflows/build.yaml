name: Build-Test

on:
  push:
    branches: [ "setup-github-build-workflow", "master" ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master 
        
jobs:

  build-test-publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: "Install Poetry"
      run: |
        pip install poetry poetry-plugin-export
        poetry --version
        poetry export --without-hashes --with dev,security --format=requirements.txt --output=requirements.txt

    - name: "Install Pip Requirements"
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        python --version

    # Run Secret Scan first, if a secret has been commited it should be addressed.
    - name: Detect Secret Scan
      run: |
        source venv/bin/activate
        git ls-files | xargs detect-secrets-hook --exclude-files=migrations

    - name: Set up environment variables
      run: |
        echo "SECRET_KEY=$(openssl rand -hex 32)" >> $GITHUB_ENV
        echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: "Style Checks"
      run: |
        source venv/bin/activate
        python -m flake8

    - name: Run Unit Tests
      run: |
        source venv/bin/activate
        coverage run -m pytest tests/test_app.py 

    - name: Unit Tests Coverage Report
      run: |
        source venv/bin/activate
        coverage report

    - name: Selenium Tests
      run: |
        google-chrome --version
        source venv/bin/activate
        pytest tests/test_selenium.py

    - name: Scan Project Dependencies 
      run: |
        source venv/bin/activate
        poetry export --without-hashes --format=requirements.txt --output=requirements-app.txt
        poetry export --without-hashes --only=dev --format=requirements.txt --output=requirements-dev.txt
        poetry export --without-hashes --only=security --format=requirements.txt --output=requirements-security.txt

        printf "\n\nApp Requirements\n----------------------\n"
        pip-audit -r requirements-app.txt
        printf "\n\nDev Requirements\n----------------------\n"
        pip-audit -r requirements-dev.txt
        printf "\n\nSecurity Requirements\n----------------------\n"
        pip-audit -r requirements-security.txt

